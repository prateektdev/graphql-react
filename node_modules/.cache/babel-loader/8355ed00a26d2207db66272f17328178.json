{"ast":null,"code":"var _jsxFileName = \"/home/prateek/Documents/techvalens/test-task/src/containers/Topics/Topics.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_TOPICS = gql`\nquery SearchTopics($search: String!) {\n  search(query: $search, type: REPOSITORY, first: 10) {\n    repositoryCount\n    edges {\n      node {\n        ... on Repository {\n          stargazers {\n            totalCount\n          }\n          resourcePath\n          repositoryTopics(first: 10) {\n            totalCount\n            nodes {\n              topic {\n                name\n                stargazerCount\n                relatedTopics {\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`;\n\nconst Topics = props => {\n  _s();\n\n  const [searchValue, setSearchValue] = useState(\"react\"); // const { loading, error, data } = useQuery(GET_TOPICS,\n  //   {\n  //     variables: { searchValue }\n  //   });\n  // if (loading) {\n  //   return (\n  //     <div>\n  //       <i className=\"fa fa-spinner fa-spin mr-4\" />\n  //       <span>...Searching for {searchValue}</span>\n  //     </div>\n  //   );\n  // }\n  // if (error) return `Error! ${error.message}`;\n  //debug the result if needed\n  // console.debug(\"RESULT:\", data);\n\n  const handleSearchChange = key => {\n    //update the search term when user type in the search bar\n    this.setState({\n      searchTerm: key\n    });\n    console.log(\"handleSearchChange:\", key, this.state.searchTerm);\n  };\n\n  const handleChange = e => {\n    this.setState({\n      searchTerm: e.target.value\n    });\n    console.debug(\"handleChange:\", this.state, e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar navbar-dark bg-dark\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-brand \",\n      children: \"Test task GraphQL  \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-inline\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: searchValue,\n        onChange: handleChange,\n        className: \"form-control \",\n        type: \"search\",\n        placeholder: \"Search\",\n        \"aria-label\": \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-success\",\n        type: \"submit\",\n        onClick: () => props.onSearchChange(searchValue),\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Topics, \"9+69m7QQFqpDQbnivd7uKifrIFw=\");\n\n_c = Topics;\nexport default Topics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Topics\");","map":{"version":3,"sources":["/home/prateek/Documents/techvalens/test-task/src/containers/Topics/Topics.js"],"names":["useQuery","gql","useState","GET_TOPICS","Topics","props","searchValue","setSearchValue","handleSearchChange","key","setState","searchTerm","console","log","state","handleChange","e","target","value","debug","onSearchChange"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,UAAU,GAAGF,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA5BA;;AA8BA,MAAMG,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,WAAD,EAAaC,cAAb,IAA8BL,QAAQ,CAAC,OAAD,CAA5C,CADwB,CAGxB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,QAAMM,kBAAkB,GAAGC,GAAG,IAAI;AACjC;AACA,SAAKC,QAAL,CAAc;AAAEC,MAAAA,UAAU,EAAEF;AAAd,KAAd;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCJ,GAAlC,EAAsC,KAAKK,KAAL,CAAWH,UAAjD;AACD,GAJA;;AAMD,QAAMI,YAAY,GAAIC,CAAD,IAAO;AAC1B,SAAKN,QAAL,CAAc;AAAEC,MAAAA,UAAU,EAAEK,CAAC,CAACC,MAAF,CAASC;AAAvB,KAAd;AACAN,IAAAA,OAAO,CAACO,KAAR,CAAc,eAAd,EAA8B,KAAKL,KAAnC,EAA0CE,CAAC,CAACC,MAAF,CAASC,KAAnD;AACD,GAHD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AACE,QAAA,KAAK,EAAEZ,WADT;AAEE,QAAA,QAAQ,EAAES,YAFZ;AAGE,QAAA,SAAS,EAAC,eAHZ;AAG4B,QAAA,IAAI,EAAC,QAHjC;AAG0C,QAAA,WAAW,EAAC,QAHtD;AAG+D,sBAAW;AAH1E;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAQ,QAAA,SAAS,EAAC,yBAAlB;AAA4C,QAAA,IAAI,EAAC,QAAjD;AACE,QAAA,OAAO,EAAE,MAAMV,KAAK,CAACe,cAAN,CAAqBd,WAArB,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA3CD;;GAAMF,M;;KAAAA,M;AA4CN,eAAeA,MAAf","sourcesContent":["import { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport { useState } from \"react\";\n\nconst GET_TOPICS = gql`\nquery SearchTopics($search: String!) {\n  search(query: $search, type: REPOSITORY, first: 10) {\n    repositoryCount\n    edges {\n      node {\n        ... on Repository {\n          stargazers {\n            totalCount\n          }\n          resourcePath\n          repositoryTopics(first: 10) {\n            totalCount\n            nodes {\n              topic {\n                name\n                stargazerCount\n                relatedTopics {\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`;\n\nconst Topics = (props) => { \n  const [searchValue,setSearchValue] =useState(\"react\");\n\n  // const { loading, error, data } = useQuery(GET_TOPICS,\n  //   {\n  //     variables: { searchValue }\n  //   });\n\n  // if (loading) {\n  //   return (\n  //     <div>\n  //       <i className=\"fa fa-spinner fa-spin mr-4\" />\n  //       <span>...Searching for {searchValue}</span>\n  //     </div>\n  //   );\n  // }\n  // if (error) return `Error! ${error.message}`;\n  //debug the result if needed\n  // console.debug(\"RESULT:\", data);\n   const handleSearchChange = key => {\n    //update the search term when user type in the search bar\n    this.setState({ searchTerm: key });\n    console.log(\"handleSearchChange:\",key,this.state.searchTerm);\n  }\n\n  const handleChange = (e) => {\n    this.setState({ searchTerm: e.target.value });\n    console.debug(\"handleChange:\",this.state, e.target.value);\n  };\n  return (    \n    <nav className=\"navbar navbar-dark bg-dark\">\n      <div className=\"navbar-brand \">Test task GraphQL  </div>\n      <div className=\"form-inline\">\n        <input\n          value={searchValue}\n          onChange={handleChange}\n          className=\"form-control \" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n        <button className=\"btn btn-outline-success\" type=\"submit\"\n          onClick={() => props.onSearchChange(searchValue)}\n        >Search</button>\n      </div>\n    </nav> \n  )\n}\nexport default Topics;"]},"metadata":{},"sourceType":"module"}