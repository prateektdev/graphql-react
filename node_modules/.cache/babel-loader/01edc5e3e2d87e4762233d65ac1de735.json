{"ast":null,"code":"var _jsxFileName = \"/home/prateek/Documents/techvalens/test-task/src/components/topicList.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_TOPICS = gql`\nquery SearchTopics($search: String!) {\n  search(query: $search, type: REPOSITORY, first: 10) {\n    repositoryCount\n    edges {\n      node {\n        ... on Repository {\n          stargazers {\n            totalCount\n          }\n          resourcePath\n          repositoryTopics(first: 10) {\n            totalCount\n            nodes {\n              topic {\n                name\n                stargazerCount\n                relatedTopics {\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`;\n\nfunction SearchResult(props) {\n  _s();\n\n  let searchTerm = props.value;\n  const [newTopic, setTopic] = useState(searchTerm);\n  let search; //initialise the search phrase - whether from user clicking on a topi or key in from navbar top\n\n  searchTerm = newTopic;\n  props.onChange(newTopic); //parsing the search phase into the gql query\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_TOPICS, {\n    variables: {\n      search\n    }\n  });\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-spinner fa-spin mr-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"...Searching for \", search]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this);\n  }\n\n  if (error) return `Error! ${error.message}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data && data.search.edges && data.search.edges.map((edge, index) => /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: edge.node.resourcePath\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge badge-success badge-pill badge-star\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-star mr-2\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 77\n            }, this), edge.node.stargazers.totalCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Related Topics:\", edge.node.repositoryTopics.nodes.map((node, j) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setTopic(node.topic.name),\n            type: \"button\",\n            className: \"btn btn-outline-info btn-sm mx-1 my-1\",\n            children: [node.topic.name, \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge badge-light badge-pill\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-star m1-2\",\n                \"aria-hidden\": \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 149\n              }, this), node.topic.stargazerCount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 102\n            }, this)]\n          }, j, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 7\n  }, this);\n}\n\n_s(SearchResult, \"EHmlzISZ8H15fnfjcDs5GfX1I5c=\", false, function () {\n  return [useQuery];\n});\n\n_c = SearchResult;\n\nfunction updateSearchTerm(data) {\n  console.debug(\"updateSearchTerm\", data);\n}\n\nexport default SearchResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResult\");","map":{"version":3,"sources":["/home/prateek/Documents/techvalens/test-task/src/components/topicList.js"],"names":["useQuery","gql","useState","GET_TOPICS","SearchResult","props","searchTerm","value","newTopic","setTopic","search","onChange","loading","error","data","variables","message","edges","map","edge","index","node","resourcePath","stargazers","totalCount","repositoryTopics","nodes","j","topic","name","stargazerCount","updateSearchTerm","console","debug"],"mappings":"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","sourcesContent":["import { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport { useState } from \"react\";\n\nconst GET_TOPICS = gql`\nquery SearchTopics($search: String!) {\n  search(query: $search, type: REPOSITORY, first: 10) {\n    repositoryCount\n    edges {\n      node {\n        ... on Repository {\n          stargazers {\n            totalCount\n          }\n          resourcePath\n          repositoryTopics(first: 10) {\n            totalCount\n            nodes {\n              topic {\n                name\n                stargazerCount\n                relatedTopics {\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`;\nfunction SearchResult(props) {\n\n    let searchTerm = props.value;\n    const [newTopic, setTopic] = useState(searchTerm);\n    let search;\n    //initialise the search phrase - whether from user clicking on a topi or key in from navbar top\n    \n      searchTerm = newTopic;\n      props.onChange(newTopic); \n\n    //parsing the search phase into the gql query\n    const { loading, error, data } = useQuery(GET_TOPICS,\n      {\n        variables: { search}\n      });\n  \n    if (loading){ \n      return (\n        <div>\n          <i className=\"fa fa-spinner fa-spin mr-4\"/>\n          <span>...Searching for {search}</span>\n        </div>\n      );\n    }\n    if (error) return `Error! ${error.message}`; \n\n    return (\n      <div>\n        {data && data.search.edges &&  data.search.edges.map((edge, index) => (\n          <ul className=\"list-group\"  key={index}>\n            <li className=\"list-group-item\">\n              <div className=\"d-flex justify-content-between\">\n                <h5>{edge.node.resourcePath}</h5>\n                <span className=\"badge badge-success badge-pill badge-star\"><i className=\"fa fa-star mr-2\" aria-hidden=\"true\" />{edge.node.stargazers.totalCount}</span>\n              </div>\n              <div>\n                Related Topics:\n                {edge.node.repositoryTopics.nodes.map((node,j)=>(\n                  <button key={j}\n                    onClick={() => setTopic(node.topic.name)}\n                  type=\"button\" className=\"btn btn-outline-info btn-sm mx-1 my-1\">{node.topic.name}  <span className=\"badge badge-light badge-pill\"><i className=\"fa fa-star m1-2\" aria-hidden=\"true\" />{node.topic.stargazerCount}</span></button>\n                   ))}\n              </div>\n            </li>\n          </ul>\n        ))}\n      </div>\n    );\n  }\n\n function updateSearchTerm(data){ \n    console.debug(\"updateSearchTerm\",data);\n  }\n\nexport default SearchResult;"]},"metadata":{},"sourceType":"module"}