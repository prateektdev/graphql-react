{"ast":null,"code":"var _jsxFileName = \"/home/prateek/Documents/techvalens/test-task/src/components/TopicResult.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_TOPICS = gql`\nquery SearchTopics($search: String!) {\n  search(query: $search, type: REPOSITORY, first: 10) {\n    repositoryCount\n    edges {\n      node {\n        ... on Repository {\n          stargazers {\n            totalCount\n          }\n          resourcePath\n          repositoryTopics(first: 10) {\n            totalCount\n            nodes {\n              topic {\n                name\n                stargazerCount\n                relatedTopics {\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`;\n\nfunction TopicResult(props) {\n  _s();\n\n  let searchTerm = props.value;\n  const [newTopic, setTopic] = useState(searchTerm);\n  let search;\n\n  if (searchTerm === newTopic) {\n    search = searchTerm;\n  } else {\n    search = newTopic;\n    searchTerm = newTopic;\n    props.onChange(newTopic);\n  }\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_TOPICS, {\n    variables: {\n      search\n    }\n  });\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-spinner fa-spin mr-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"...Searching for \", search]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (error) return `Error! ${error.message}`;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: data && data.search.edges && data.search.edges.map((edge, index) => /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-start\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-primary mr-2\",\n            children: edge.node.resourcePath\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-star mr-2\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 36\n            }, this), edge.node.stargazers.totalCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-start\",\n          children: [\"Related Topics:\", edge.node.repositoryTopics.nodes.map((node, j) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setTopic(node.topic.name),\n            type: \"button\",\n            className: \"btn btn-outline-primary btn mx-2 my-2\",\n            children: [node.topic.name, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-dark\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-star m1-2\",\n                \"aria-hidden\": \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 65\n              }, this), node.topic.stargazerCount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 37\n            }, this)]\n          }, j, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TopicResult, \"EHmlzISZ8H15fnfjcDs5GfX1I5c=\", false, function () {\n  return [useQuery];\n});\n\n_c = TopicResult;\nexport default TopicResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopicResult\");","map":{"version":3,"sources":["/home/prateek/Documents/techvalens/test-task/src/components/TopicResult.js"],"names":["useQuery","gql","React","useState","GET_TOPICS","TopicResult","props","searchTerm","value","newTopic","setTopic","search","onChange","loading","error","data","variables","message","edges","map","edge","index","node","resourcePath","stargazers","totalCount","repositoryTopics","nodes","j","topic","name","stargazerCount"],"mappings":"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","sourcesContent":["import { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport React, { useState } from \"react\";\n\nconst GET_TOPICS = gql`\nquery SearchTopics($search: String!) {\n  search(query: $search, type: REPOSITORY, first: 10) {\n    repositoryCount\n    edges {\n      node {\n        ... on Repository {\n          stargazers {\n            totalCount\n          }\n          resourcePath\n          repositoryTopics(first: 10) {\n            totalCount\n            nodes {\n              topic {\n                name\n                stargazerCount\n                relatedTopics {\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`;\nfunction TopicResult(props) {\n\n    let searchTerm = props.value;\n    const [newTopic, setTopic] = useState(searchTerm);\n\n    let search;\n    if (searchTerm === newTopic) {\n        search = searchTerm\n    } else {\n        search = newTopic\n        searchTerm = newTopic;\n        props.onChange(newTopic);\n    }\n\n    const { loading, error, data } = useQuery(GET_TOPICS,\n        {\n            variables: { search }\n        });\n\n    if (loading) {\n        return (\n            <div>\n                <i className=\"fa fa-spinner fa-spin mr-4\" />\n                <span>...Searching for {search}</span>\n            </div>\n        );\n    }\n    if (error) return `Error! ${error.message}`;\n\n    return (\n        <React.Fragment>\n            {data && data.search.edges && data.search.edges.map((edge, index) => (\n                <ul className=\"list-group\" key={index}>\n                    <li className=\"list-group-item\">\n                        <div className=\"d-flex justify-content-start\">\n                            <span className=\"text-primary mr-2\">{edge.node.resourcePath}</span>\n                            <span> <i className=\"fa fa-star mr-2\" aria-hidden=\"true\" />{edge.node.stargazers.totalCount}</span>\n                        </div>\n                        <div className=\"d-flex justify-content-start\">\n                            Related Topics:\n                            {edge.node.repositoryTopics.nodes.map((node, j) => (\n                                <button key={j}\n                                    onClick={() => setTopic(node.topic.name)}\n                                    type=\"button\" className=\"btn btn-outline-primary btn mx-2 my-2\">{node.topic.name}\n                                    <span className=\"text-dark\"><i className=\"fa fa-star m1-2\" aria-hidden=\"true\" />{node.topic.stargazerCount}</span></button>\n                            ))}\n                        </div>\n                    </li>\n                </ul>\n            ))}\n        </React.Fragment>\n    );\n}\n\nexport default TopicResult;"]},"metadata":{},"sourceType":"module"}