{"ast":null,"code":"var _jsxFileName = \"/home/prateek/Documents/techvalens/test-task/src/containers/Topics/Topics.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_TOPICS = gql`\nquery SearchTopics($search: String!) {\n  search(query: $search, type: REPOSITORY, first: 10) {\n    repositoryCount\n    edges {\n      node {\n        ... on Repository {\n          stargazers {\n            totalCount\n          }\n          resourcePath\n          repositoryTopics(first: 10) {\n            totalCount\n            nodes {\n              topic {\n                name\n                stargazerCount\n                relatedTopics {\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`;\n\nconst Topics = props => {\n  _s();\n\n  let search = \"react\";\n  const [searchValue, setSearchValue] = useState(\"react\");\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_TOPICS, {\n    variables: {\n      search\n    }\n  });\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-spinner fa-spin mr-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"...Searching for \", search]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) return `Error! ${error.message}`; //debug the result if needed\n\n  console.debug(\"RESULT:\", data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Test Task GraphQL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-dark bg-dark\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-brand\",\n        children: [\"Github GraphQL Demo \", this.props.init]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-inline\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.searchTerm,\n          onChange: this.handleChange,\n          className: \"form-control mr-sm-2\",\n          type: \"search\",\n          placeholder: \"Search\",\n          \"aria-label\": \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success my-2 my-sm-0\",\n          type: \"submit\",\n          onClick: () => this.props.onSearchChange(this.state.searchTerm),\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 11\n  }, this);\n};\n\n_s(Topics, \"/y4vpB/H/8tUo623mGborQO7Rew=\", false, function () {\n  return [useQuery];\n});\n\n_c = Topics;\nexport default Topics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Topics\");","map":{"version":3,"sources":["/home/prateek/Documents/techvalens/test-task/src/containers/Topics/Topics.js"],"names":["useQuery","gql","useState","GET_TOPICS","Topics","props","search","searchValue","setSearchValue","loading","error","data","variables","message","console","debug","init","state","searchTerm","handleChange","onSearchChange"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,UAAU,GAAGF,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA5BA;;AA8BA,MAAMG,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,MAAIC,MAAM,GAAG,OAAb;AACA,QAAM,CAACC,WAAD,EAAaC,cAAb,IAA8BN,QAAQ,CAAC,OAAD,CAA5C;AACA,QAAM;AAAEO,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BX,QAAQ,CAACG,UAAD,EACvC;AACES,IAAAA,SAAS,EAAE;AAAEN,MAAAA;AAAF;AADb,GADuC,CAAzC;;AAKA,MAAIG,OAAJ,EAAa;AACX,wBACE;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,wCAAwBH,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AACD,MAAII,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACG,OAAQ,EAA/B,CAhBa,CAiBxB;;AACAC,EAAAA,OAAO,CAACC,KAAR,CAAc,SAAd,EAAyBJ,IAAzB;AACA,sBAAQ;AAAA,4BACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,eAEN;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,2CAAmD,KAAKN,KAAL,CAAWW,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AACE,UAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,UADpB;AAEE,UAAA,QAAQ,EAAE,KAAKC,YAFjB;AAGE,UAAA,SAAS,EAAC,sBAHZ;AAGmC,UAAA,IAAI,EAAC,QAHxC;AAGiD,UAAA,WAAW,EAAC,QAH7D;AAGsE,wBAAW;AAHjF;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAQ,UAAA,SAAS,EAAC,sCAAlB;AAAyD,UAAA,IAAI,EAAC,QAA9D;AACE,UAAA,OAAO,EAAE,MAAM,KAAKd,KAAL,CAAWe,cAAX,CAA0B,KAAKH,KAAL,CAAWC,UAArC,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFM;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAgBD,CAnCD;;GAAMd,M;UAG6BJ,Q;;;KAH7BI,M;AAoCN,eAAeA,MAAf","sourcesContent":["import { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport { useState } from \"react\";\n\nconst GET_TOPICS = gql`\nquery SearchTopics($search: String!) {\n  search(query: $search, type: REPOSITORY, first: 10) {\n    repositoryCount\n    edges {\n      node {\n        ... on Repository {\n          stargazers {\n            totalCount\n          }\n          resourcePath\n          repositoryTopics(first: 10) {\n            totalCount\n            nodes {\n              topic {\n                name\n                stargazerCount\n                relatedTopics {\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`;\n\nconst Topics = (props) => {\n  let search = \"react\";\n  const [searchValue,setSearchValue] =useState(\"react\");\n  const { loading, error, data } = useQuery(GET_TOPICS,\n    {\n      variables: { search }\n    });\n\n  if (loading) {\n    return (\n      <div>\n        <i className=\"fa fa-spinner fa-spin mr-4\" />\n        <span>...Searching for {search}</span>\n      </div>\n    );\n  }\n  if (error) return `Error! ${error.message}`;\n  //debug the result if needed\n  console.debug(\"RESULT:\", data);\n  return (<div>\n    <div>Test Task GraphQL</div>\n    <nav className=\"navbar navbar-dark bg-dark\">\n      <div className=\"navbar-brand\">Github GraphQL Demo {this.props.init}</div>\n      <div className=\"form-inline\">\n        <input\n          value={this.state.searchTerm}\n          onChange={this.handleChange}\n          className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n        <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\"\n          onClick={() => this.props.onSearchChange(this.state.searchTerm)}\n        >Search</button>\n      </div>\n    </nav>\n  </div>\n  )\n}\nexport default Topics;"]},"metadata":{},"sourceType":"module"}