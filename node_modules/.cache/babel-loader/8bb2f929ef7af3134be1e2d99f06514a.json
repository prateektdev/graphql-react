{"ast":null,"code":"var _jsxFileName = \"/home/prateek/Documents/techvalens/test-task/src/App.js\",\n    _s = $RefreshSig$();\n\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport Topic from './components/Topic';\nimport { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n{\n  /* creating Apollo Client with our personal token for github graphql api*/\n}\nconst client = new ApolloClient({\n  uri: \"https://api.github.com/graphql\",\n  headers: {\n    \"Authorization\": `bearer ${process.env.REACT_APP_NOT_SECRET_CODE}`\n  }\n});\n\nfunction App() {\n  _s();\n\n  const [searchValue, setSearchValue] = useState(\"react\");\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Topic, {\n        searchValue: searchValue,\n        onSearchInputChange: setSearchValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"1KR8+UQay0KqdTu8FAxlqheSRto=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/prateek/Documents/techvalens/test-task/src/App.js"],"names":["ApolloClient","ApolloProvider","Topic","useState","client","uri","headers","process","env","REACT_APP_NOT_SECRET_CODE","App","searchValue","setSearchValue"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;;AAEA;AAAC;AAA4E;AAC7E,MAAMC,MAAM,GAAG,IAAIJ,YAAJ,CAAiB;AAC9BK,EAAAA,GAAG,EAAE,gCADyB;AAE9BC,EAAAA,OAAO,EAAE;AACP,qBAAkB,UAASC,OAAO,CAACC,GAAR,CAAYC,yBAA0B;AAD1D;AAFqB,CAAjB,CAAf;;AAOA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,OAAD,CAA9C;AACA,sBACE,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEC,MAAxB;AAAA,iCACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,WAAW,EAAEO,WAApB;AAAiC,QAAA,mBAAmB,EAAEC;AAAtD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GATQF,G;;KAAAA,G;AAWT,eAAeA,GAAf","sourcesContent":["import ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport Topic from './components/Topic';\nimport { useState } from 'react';\nimport './App.css';\n\n{/* creating Apollo Client with our personal token for github graphql api*/ }\nconst client = new ApolloClient({\n  uri: \"https://api.github.com/graphql\",\n  headers: {\n    \"Authorization\": `bearer ${process.env.REACT_APP_NOT_SECRET_CODE}`\n  }\n});\n\nfunction App() {\n  const [searchValue, setSearchValue] = useState(\"react\");\n  return (\n    <ApolloProvider client={client}> {/* passing the apollo graphql client to child components*/}\n      <div className=\"App\">\n        <Topic searchValue={searchValue} onSearchInputChange={setSearchValue} ></Topic>\n      </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}