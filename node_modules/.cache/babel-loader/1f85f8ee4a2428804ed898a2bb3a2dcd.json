{"ast":null,"code":"var _jsxFileName = \"/home/prateek/Documents/techvalens/test-task/src/containers/Topics/Topics.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_TOPICS = gql`\nquery SearchTopics($search: String!) {\n  search(query: $search, type: REPOSITORY, first: 10) {\n    repositoryCount\n    edges {\n      node {\n        ... on Repository {\n          stargazers {\n            totalCount\n          }\n          resourcePath\n          repositoryTopics(first: 10) {\n            totalCount\n            nodes {\n              topic {\n                name\n                stargazerCount\n                relatedTopics {\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`;\n\nconst Topics = props => {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_TOPICS, {\n    variables: {\n      search\n    }\n  });\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-spinner fa-spin mr-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"...Searching for \", search]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) return `Error! ${error.message}`; //debug the result if needed\n\n  console.debug(\"RESULT:\", data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"This is Topic\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Topics, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Topics;\nexport default Topics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Topics\");","map":{"version":3,"sources":["/home/prateek/Documents/techvalens/test-task/src/containers/Topics/Topics.js"],"names":["useQuery","gql","GET_TOPICS","Topics","props","loading","error","data","variables","search","message","console","debug"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AAEA,MAAMC,UAAU,GAAGD,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA5BA;;AA8BA,MAAME,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BP,QAAQ,CAACE,UAAD,EACvC;AACEM,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AADb,GADuC,CAAzC;;AAKA,MAAIJ,OAAJ,EAAY;AACV,wBACE;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,wCAAwBI,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AACD,MAAIH,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACI,OAAQ,EAA/B,CAda,CAexB;;AACAC,EAAAA,OAAO,CAACC,KAAR,CAAc,SAAd,EAAwBL,IAAxB;AACE,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CApBD;;GAAMJ,M;UAC6BH,Q;;;KAD7BG,M;AAqBN,eAAeA,MAAf","sourcesContent":["import { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\n\nconst GET_TOPICS = gql`\nquery SearchTopics($search: String!) {\n  search(query: $search, type: REPOSITORY, first: 10) {\n    repositoryCount\n    edges {\n      node {\n        ... on Repository {\n          stargazers {\n            totalCount\n          }\n          resourcePath\n          repositoryTopics(first: 10) {\n            totalCount\n            nodes {\n              topic {\n                name\n                stargazerCount\n                relatedTopics {\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`;\n\nconst Topics = (props) => {\n  const { loading, error, data } = useQuery(GET_TOPICS,\n    {\n      variables: { search}\n    });\n\n  if (loading){ \n    return (\n      <div>\n        <i className=\"fa fa-spinner fa-spin mr-4\"/>\n        <span>...Searching for {search}</span>\n      </div>\n    );\n  }\n  if (error) return `Error! ${error.message}`;\n  //debug the result if needed\n  console.debug(\"RESULT:\",data);\n    return (\n        <div>This is Topic</div>\n    )\n}\nexport default Topics;"]},"metadata":{},"sourceType":"module"}